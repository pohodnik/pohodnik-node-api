import {Commands} from "./enums/Commands";
import {StartAnswers} from "./enums/StartAnswers";

const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();

const token = process.env.TELEGRAM_BOT_TOKEN;

const bot = new TelegramBot(token, { polling: true });

bot.onText(/\/echo (.+)/, (msg, match) => {
    const chatId = msg.chat.id;
    const resp = match[1]; // the captured "whatever"
     bot.sendMessage(chatId, resp);
});

bot.on('message', (msg, metadata) => {
    const chatId = msg.chat.id;

    switch (msg.text) {
        case Commands.Start:
            bot.sendMessage(chatId, '–ö–Ω–æ–ø–∞—â–∫–µ', {
                reply_markup: {
                    inline_keyboard: [
                        [{
                            text: "–ó–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è –∫–∞–∫ –ø–æ—Ö–æ–¥–Ω–∏–∫",
                            callback_data: StartAnswers.Login,
                        }],
                        [{
                            text: "–ö–æ–≥–¥–∞ –ø–æ—Ö–æ–¥?",
                            callback_data: StartAnswers.WhenHike,
                        }],
                    ]
                }
            });
            break;
        default:
            bot.sendMessage(chatId, '–õ—É—á—à–µ –ø–æ–ø—Ä–æ–±—É–π –∫–æ–º–∞–Ω–¥—É /start \n\n\n' + JSON.stringify({msg, metadata}, null, ' '));
    }

    // send a message to the chat acknowledging receipt of their message

});

bot.on('callback_query', function onCallbackQuery(callbackQuery) {
    const action = callbackQuery.data;
    const msg = callbackQuery.message;
    const opts = {
        chat_id: msg.chat.id,
        message_id: msg.message_id,
    };
    let text;

    switch (action) {
        case StartAnswers.Login:
            bot.sendMessage(msg.chat.id, "–ü–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤–æ... üòé, –Ω–æ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞ —Å–µ–π—Ç–µ –∑–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è, –µ—Å–ª–∏ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è https://pohodnik.tk/login ");
            break;
        case StartAnswers.WhenHike:
            bot.sendMessage(msg.chat.id, "–°–∫–æ—Ä–æ üòä");
            break;
        default:
            bot.sendMessage(msg.chat.id, JSON.stringify({msg, action}, null, ' '));
    }
});
